{"version":3,"sources":["RewindButton.js","helpers.js","LQSelector.js","d3SpendingMap.js","SpendingMap.js","d3IndustryFlower.js","IndustryFlower.js","d3Beeswarm.js","Beeswarm.js","IndustryFlowerTooltip.js","SpendingMapTooltip.js","BeeswarmTooltip.js","App.js","serviceWorker.js","index.js"],"names":["RewindButton","props","test","clickedFips","react","className","ButtonGroup","Button","onClick","handleNationButtonClick","Glyphicon","glyph","handleStateButtonClick","lqOptions","label","value","getLocation","mapRawData","fipscode","USStateList","vizType","filter","obj","statecode","toString","replace","statename","slice","county_name","filterSpendingData","startsWith","combined_total_pmt_amt","filterBeeswarmData","bsRawData","getSpendingRadiuScale","spendingData","forEach","scaleSqrt","domain","max","d","range","getNodesData","centerCoords","config","_config","Object","objectSpread","svgWidth","svgHeight","sizeScale","projection","geoAlbersUsa","scale","translate","map","node","name","location","_projection","center","_projection2","slicedToArray","cx","cy","r","spending","getSpendingLegendData","length","i","quantile","sort","a","b","getBsLegendData","beeswarmData","total_pmt_amt","getFlowerData","flowerRawData","metricKey","getFLowerLegendData","flowerData","getPetalSizeScale","getPetalPath","petalSize","petalPath","concat","getNumberOne","totalSpending","reduce","acc","curr","numberOne","locationName","percentage","NAICSColorLookup","11","21","22","23","31","32","33","42","44","45","48","49","51","52","53","54","55","56","61","62","71","72","81","92","LQSelector","react_select_esm","defaultValue","onChange","handleNAICSChange","options","usGeojson","topojson","us","objects","nation","statesGeojson","states","cb_2017_us_state_20m","drawOutline","outlineContainer","mapWidth","mapHeight","geojson","select","remove","type","features","properties","STATEFP","geoMercator","fitSize","geoIdentity","path","geoPath","append","attr","drawSpendingBubbles","bubbleContainer","voronoiContainer","nodesData","handleClick","isStateView","handleMouseOver","handleMouseOut","nodesUpdate","selectAll","data","nodesEnter","enter","exit","nodesMerge","merge","style","text","simulation","forceSimulation","force","forceCenter","forceCollide","strength","radius","forceX","x","forceY","y","voronoiConfig","voronoi","size","nodes","on","voronoiUpdate","polygons","voronoiEnter","join","chartParent","this","parentNode","tooltipData","mousePos","mouse","drawSpendingMapLegend","legendContainer","legendWidth","legendHeight","spendingLegendData","spendingRadiusScale","legendUpdate","legendEnter","legendMerge","transition","format","SpendingMap","mapAreaRef","_this","mapArea","voronoiRef","voronoiArea","legendRef","legendArea","outlineRef","outline","np","ns","pp","ps","_this$props","react_default","createElement","width","height","viewBox","preserveAspectRatio","ref","transform","fill","Component","drawTop5","top5Area","areaWidth","areaHeight","textBounds","textwrap","bounds","method","top5","title","naics_title","naics","groupsUpdate","groupsEnter","call","childNodes","drawFlower","flowerContainer","flowerWidth","flowerHeight","petalSizeScale","handleFlowerMouseOver","handleFlowerMouseOut","angleUnit","rectsMerge","flowerTooltipData","industry","metric","duration","drawFlowerLegend","flowerLegendData","IndustryFlower","top5AreaWidth","top5AreaHeight","flowerAreaRef","flowerArea","legendAreaRef","top5AreaRef","textAnchor","drawBsLegend","bsLegendData","radiusScale","drawBeeswarm","bsContainer","xAxisContainer","lqType","handleBeeswarmMouseOver","handleBeeswarmMouseOut","tickValues","inputRange","extent","xScale","scaleLog","rangeRound","xAxis","axisBottom","tickFormat","stop","tick","beeswarmDataWithVoronoi","cellsUpdate","cellsEnter","bsTooltipData","lqVal","chartContainer","Beeswarm","xAxisRef","beeswarmRef","beeswarmArea","IndustryFlowerTooltip","id","top","left","SpendingMapTooltip","BeeswarmTooltip","lqLabel","opt","App","state","nodeHovered","petalHovered","bsHovered","mapTooltipData","spendingTextRef","spendingTextArea","spendingFlowerTextRef","spendingFlowerTextArea","lqFlowerRef","lqFlowerArea","handleLQChange","option","setState","handleBSMouseOver","handleBSMouseOut","renderBeeswarm","beeswarmRawData","src_Beeswarm","renderSpendingText","renderSpendingMap","CountyCenters","StateCenters","src_SpendingMap","renderIndustryFlower","src_IndustryFlower","_this$state","textContainerHeight","Row","Col","xs","RewindButton_RewindButton","src_SpendingMapTooltip","spendingflowerRawData","src_IndustryFlowerTooltip","assign","OverlayTrigger","placement","overlay","Tooltip","lqflowerRawData","LQSelector_LQSelector","src_BeeswarmTooltip","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9c03887.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { ButtonGroup, Button, Glyphicon } from \"react-bootstrap\";\r\n\r\nexport const RewindButton = props => {\r\n  if (/000$/.test(props.clickedFips)) {\r\n    return (\r\n      <div className=\"rewind-container\">\r\n        <ButtonGroup>\r\n          <Button onClick={props.handleNationButtonClick}>\r\n            <Glyphicon glyph=\"step-backward\" />\r\n            Back to National View\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"rewind-container\">\r\n        <ButtonGroup>\r\n          <Button onClick={props.handleNationButtonClick}>\r\n            <Glyphicon glyph=\"fast-backward\" />\r\n            Back to National View\r\n          </Button>\r\n          <Button onClick={props.handleStateButtonClick(props.clickedFips)}>\r\n            <Glyphicon glyph=\"step-backward\" />\r\n            Back to State View\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import { geoAlbersUsa, scaleSqrt, max, quantile } from \"d3\";\r\n\r\nexport const lqOptions = [\r\n  { label: \"Employee LQ\", value: \"lq_wgt_annual_avg_emplvl\" },\r\n  { label: \"Establishment Count LQ\", value: \"lq_wgt_annual_avg_estabs_count\" },\r\n  { label: \"Annual Pay LQ\", value: \"lq_wgt_avg_annual_pay\" }\r\n];\r\n//get location in the heading\r\nexport const getLocation = (mapRawData, fipscode, USStateList, vizType) => {\r\n  if (fipscode) {\r\n    if (/000$/.test(fipscode)) {\r\n      return USStateList.filter(\r\n        obj => obj.statecode == fipscode.toString().replace(\"000\", \"\")\r\n      )[0].statename;\r\n    } else {\r\n      if (vizType === \"map\") {\r\n        return USStateList.filter(\r\n          obj => obj.statecode === +fipscode.toString().slice(0, 2)\r\n        )[0].statename;\r\n      } else {\r\n        return mapRawData.filter(obj => obj.fipscode == fipscode)[0]\r\n          .county_name;\r\n      }\r\n    }\r\n  } else {\r\n    return \"National\";\r\n  }\r\n};\r\n\r\nexport const filterSpendingData = (mapRawData, clickedFips) => {\r\n  const filteredSpending = clickedFips\r\n    ? //todo: ask kevin to filter all the zero payment and negative payment\r\n      mapRawData\r\n        .filter(\r\n          obj =>\r\n            obj.fipscode\r\n              .toString()\r\n              .startsWith(clickedFips.toString().slice(0, 2)) &&\r\n            !/000$/.test(obj.fipscode)\r\n        )\r\n        .filter(obj => obj.combined_total_pmt_amt > 0)\r\n    : mapRawData\r\n        .filter(obj => /000$/.test(obj.fipscode))\r\n        .filter(obj => obj.combined_total_pmt_amt > 0);\r\n  return filteredSpending;\r\n};\r\n\r\nexport const filterBeeswarmData = (bsRawData, clickedFips) => {\r\n  return bsRawData.filter(obj => obj.fipscode === clickedFips);\r\n};\r\nexport const getSpendingRadiuScale = spendingData => {\r\n  //important: convert payment amount to type number so that the max number is correct\r\n  spendingData.forEach(\r\n    obj => (obj.combined_total_pmt_amt = +obj.combined_total_pmt_amt)\r\n  );\r\n  return scaleSqrt()\r\n    .domain([0, max(spendingData, d => d.combined_total_pmt_amt)])\r\n    .range([0, 50]);\r\n  //return scaleSqrt().domain(extent(spendingData, d => d.combined_total_pmt_amt)).range([1, 50]);\r\n};\r\n\r\n//generate nodes for the spending \"map\"\r\nexport const getNodesData = (spendingData, centerCoords, config) => {\r\n  //important: convert payment amount to type number so that the max number is correct\r\n  spendingData.forEach(\r\n    obj => (obj.combined_total_pmt_amt = +obj.combined_total_pmt_amt)\r\n  );\r\n\r\n  //console.log(spendingData)\r\n  //console.log(extent(spendingData, d => d.combined_total_pmt_amt))\r\n  //console.log(centerCoords)\r\n\r\n  config = {\r\n    svgWidth: 960,\r\n    svgHeight: 600,\r\n    ...config\r\n  };\r\n  const { sizeScale, svgWidth, svgHeight } = config;\r\n  const projection = geoAlbersUsa()\r\n    .scale(svgWidth * 0.7)\r\n    .translate([svgWidth / 2, svgHeight / 2]);\r\n  const nodesData = spendingData.map(node => {\r\n    const label = centerCoords[node.fipscode].name;\r\n    const location = node.county_name;\r\n    const [cx, cy] = projection(centerCoords[node.fipscode].center);\r\n\r\n    const r = sizeScale(node.combined_total_pmt_amt);\r\n    return {\r\n      cx,\r\n      cy,\r\n      r,\r\n      label,\r\n      spending: node.combined_total_pmt_amt,\r\n      fipscode: node.fipscode,\r\n      location\r\n    };\r\n  });\r\n\r\n  //console.log(nodesData)\r\n  return nodesData;\r\n};\r\n\r\nexport const getSpendingLegendData = spendingData => {\r\n  return spendingData.length !== 1\r\n    ? [0, 0.5, 1].map(i =>\r\n        quantile(\r\n          spendingData.map(d => d.combined_total_pmt_amt).sort((a, b) => a - b),\r\n          i\r\n        )\r\n      )\r\n    : spendingData.map(d => d.combined_total_pmt_amt);\r\n};\r\n\r\nexport const getBsLegendData = beeswarmData => {\r\n  return beeswarmData.length !== 1\r\n    ? [0, 0.5, 1].map(i =>\r\n        quantile(\r\n          beeswarmData.map(d => +d.total_pmt_amt).sort((a, b) => a - b),\r\n          i\r\n        )\r\n      )\r\n    : beeswarmData.map(d => d.total_pmt_amt);\r\n};\r\n\r\nexport const getFlowerData = (flowerRawData, clickedFips, metricKey) => {\r\n  flowerRawData.forEach(obj => (obj[metricKey] = +obj[metricKey]));\r\n  return clickedFips\r\n    ? flowerRawData.filter(obj => obj.fipscode == clickedFips)\r\n    : flowerRawData.filter(obj => obj.statecode == \"NULL\");\r\n};\r\nexport const getFLowerLegendData = (flowerData, metricKey) => {\r\n  return flowerData.length !== 1\r\n    ? [0, 0.5, 1].map(i =>\r\n        quantile(flowerData.map(d => +d[metricKey]).sort((a, b) => a - b), i)\r\n      )\r\n    : flowerData.map(d => d[metricKey]);\r\n};\r\n\r\nexport const getPetalSizeScale = (flowerData, metricKey) => {\r\n  return scaleSqrt()\r\n    .domain([0, max(flowerData, d => d[metricKey])])\r\n    .range([0, 100]);\r\n};\r\n\r\nexport const getPetalPath = (petalSize, metricKey) => {\r\n  let petalPath;\r\n  switch (metricKey) {\r\n    case \"lq_wgt_annual_avg_emplvl\":\r\n      petalPath = [\r\n        \"M0,0\",\r\n        `C${petalSize / 2},${petalSize / 4}, ${petalSize / 2},${petalSize *\r\n          0.75} 0,${petalSize}`,\r\n        `C${-petalSize / 2},${petalSize * 0.75} ${-petalSize / 2},${petalSize /\r\n          4} 0,0`\r\n      ];\r\n      break;\r\n    default:\r\n      petalPath = [\r\n        \"M0,0\",\r\n        `C${petalSize / 2},${petalSize / 2} ${petalSize /\r\n          2},${petalSize} 0,${petalSize}`,\r\n        `C-${petalSize / 2},${petalSize} -${petalSize / 2},${petalSize / 2} 0,0`\r\n      ];\r\n      break;\r\n  }\r\n  return petalPath;\r\n};\r\n\r\nexport const getTop5Locations = (spendingData, USStateList, clickedFips) => {\r\n  const top5Locations = spendingData\r\n    .sort((a, b) =>\r\n      a.combined_total_pmt_amt < b.combined_total_pmt_amt ? 1 : -1\r\n    )\r\n    .slice(1, 6)\r\n    .map(spendingObj =>\r\n      clickedFips\r\n        ? spendingObj.county_name.replace(/,\\s[A-Z][A-Z]/, \"\")\r\n        : USStateList.filter(obj => obj.statecode === +spendingObj.statecode)[0]\r\n            .statename\r\n    );\r\n\r\n  return `${top5Locations.slice(0, 4).join(\", \")} and ${top5Locations[4]}`;\r\n};\r\n\r\nexport const getNumberOne = (spendingData, USStateList, clickedFips) => {\r\n  const totalSpending = spendingData.reduce(\r\n    (acc, curr) => acc + curr.combined_total_pmt_amt,\r\n    0\r\n  );\r\n  const numberOne = spendingData.sort((a, b) =>\r\n    a.combined_total_pmt_amt < b.combined_total_pmt_amt ? 1 : -1\r\n  )[0];\r\n  return {\r\n    locationName: clickedFips\r\n      ? numberOne.county_name.replace(/,\\s[A-Z][A-Z]/, \"\")\r\n      : USStateList.filter(obj => obj.statecode === +numberOne.statecode)[0]\r\n          .statename,\r\n    percentage: numberOne.combined_total_pmt_amt / totalSpending\r\n  };\r\n};\r\n\r\nexport const getBubbleLegendInput = (rawData, metric) => {\r\n  // todo: ask kevin to filter all the zero payments in the data\r\n\r\n  return [0, 0.25, 0.5, 0.75, 1].map(i =>\r\n    quantile(\r\n      rawData\r\n        .filter(obj => obj.total_pmt_amt !== 0)\r\n        .map(d => d[metric])\r\n        .sort((a, b) => a - b),\r\n      i\r\n    )\r\n  );\r\n};\r\n\r\nexport const NAICSColorLookup = {\r\n  11: \"#a4044d\",\r\n  21: \"#bb190a\",\r\n  22: \"#758c45\",\r\n  23: \"#048a37\",\r\n  31: \"#224f3e\",\r\n  32: \"#e9b4f5\",\r\n  33: \"#51e258\",\r\n  42: \"#eb6be6\",\r\n  44: \"#6778f5\",\r\n  45: \"#0b29d0\",\r\n  48: \"#3588d1\",\r\n  49: \"#1e438d\",\r\n  51: \"#f1bb99\",\r\n  52: \"#169294\",\r\n  53: \"#a772a7\",\r\n  54: \"#f47d0d\",\r\n  55: \"#781486\",\r\n  56: \"#66d9cf\",\r\n  61: \"#a5cbeb\",\r\n  62: \"#f3c011\",\r\n  71: \"#b17659\",\r\n  72: \"#683c00\",\r\n  81: \"#afd35a\",\r\n  92: \"#f6568b\"\r\n};\r\n","import * as React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { lqOptions } from \"./helpers\";\r\n\r\nexport const LQSelector = props => {\r\n  return (\r\n    <div className=\"lq selector-container\">\r\n      <p className=\"selector-label\">Please select a Location Quotient:</p>\r\n      <div className=\"selector\">\r\n        <Select\r\n          defaultValue={lqOptions[0]}\r\n          onChange={props.handleNAICSChange}\r\n          options={lqOptions}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  forceSimulation,\r\n  forceCenter,\r\n  forceCollide,\r\n  forceX,\r\n  forceY,\r\n  select,\r\n  voronoi,\r\n  easeLinear,\r\n  forceManyBody,\r\n  max,\r\n  format,\r\n  mouse,\r\n  geoPath,\r\n  geoIdentity,\r\n  geoMercator\r\n} from \"d3\";\r\nimport * as topojson from \"topojson\";\r\nimport us from \"./data/us-10m.json\";\r\nimport states from \"./data/cb_2017_us_state_20m.json\";\r\nimport USStateList from \"./data/stateslist.json\";\r\n\r\nconst usGeojson = topojson.feature(us, us.objects.nation);\r\nconst statesGeojson = topojson.feature(\r\n  states,\r\n  states.objects.cb_2017_us_state_20m\r\n);\r\n\r\nexport const drawOutline = (outlineContainer, props, mapWidth, mapHeight) => {\r\n  const { clickedFips } = props;\r\n  select(outlineContainer)\r\n    .select(\"path\")\r\n    .remove();\r\n  let projection;\r\n  let geojson;\r\n  if (clickedFips) {\r\n    geojson = {\r\n      type: \"FeatureCollection\",\r\n      features: statesGeojson.features.filter(\r\n        obj =>\r\n          obj.properties.STATEFP === clickedFips.toString().replace(/000/, \"\")\r\n      )\r\n    };\r\n    projection = geoMercator().fitSize([mapWidth, mapHeight], geojson);\r\n  } else {\r\n    geojson = usGeojson;\r\n    projection = geoIdentity().fitSize([mapWidth, mapHeight], geojson);\r\n  }\r\n  //console.log(geojson)\r\n\r\n  const path = geoPath().projection(projection);\r\n  select(outlineContainer)\r\n    .append(\"path\")\r\n    .attr(\"d\", path(geojson))\r\n    .attr(\"stroke\", \"#ccc\");\r\n};\r\n\r\nexport const drawSpendingBubbles = (\r\n  bubbleContainer,\r\n  voronoiContainer,\r\n  props,\r\n  mapWidth,\r\n  mapHeight\r\n) => {\r\n  const {\r\n    nodesData,\r\n    handleClick,\r\n    clickedFips: isStateView,\r\n    handleMouseOver,\r\n    handleMouseOut\r\n  } = props;\r\n  const nodesUpdate = select(bubbleContainer)\r\n    .selectAll(\"g\")\r\n    .data(nodesData, d => d.fipscode);\r\n  const nodesEnter = nodesUpdate.enter().append(\"g\");\r\n  nodesUpdate.exit().remove();\r\n\r\n  const nodesMerge = nodesEnter.merge(nodesUpdate);\r\n\r\n  nodesMerge\r\n    .append(\"circle\")\r\n    .attr(\"id\", d => `c-${d.fipscode}`)\r\n    .attr(\"r\", d => d.r)\r\n    .style(\"fill\", \"#fcfcf4\");\r\n  nodesMerge\r\n    .append(\"text\")\r\n    .text(d => (d.r > 5 ? d.label : \"\"))\r\n    .style(\"font-size\", d => `${d.r < 10 ? d.r : 10}px`)\r\n    .attr(\"dy\", 2);\r\n  //nodesMerge.append(\"text\").text(d => d.label).attr(\"dy\",2)\r\n\r\n  //set up force layout\r\n  const simulation = forceSimulation()\r\n    .force(\"center\", forceCenter(mapWidth / 2, mapHeight / 2))\r\n    .force(\r\n      \"collide\",\r\n      forceCollide()\r\n        .strength(0.2)\r\n        .radius(d => d.r + 8)\r\n    )\r\n    .force(\"x\", forceX().x(d => d.cx))\r\n    .force(\"y\", forceY().y(d => d.cy));\r\n\r\n  //set up voronoi\r\n  const voronoiConfig = voronoi().size([mapWidth, mapHeight]);\r\n\r\n  const tickCallback = () => {\r\n    nodesMerge.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\r\n    voronoiConfig.x(d => d.x).y(d => d.y);\r\n    const voronoiUpdate = select(voronoiContainer)\r\n      .selectAll(\"path\")\r\n      .data(voronoiConfig(nodesData).polygons());\r\n    const voronoiEnter = voronoiUpdate.enter().append(\"path\");\r\n    voronoiUpdate.exit().remove();\r\n    voronoiEnter\r\n      .merge(voronoiUpdate)\r\n      .attr(\"d\", d => \"M\" + d.join(\"L\") + \"Z\")\r\n      .on(\"mouseenter\", function(d) {\r\n        const chartParent = this.parentNode.parentNode.parentNode.parentNode;\r\n        const tooltipData = {\r\n          spending: d.data.spending,\r\n          location: isStateView\r\n            ? d.data.location\r\n            : USStateList.filter(\r\n                obj =>\r\n                  obj.statecode == d.data.fipscode.toString().replace(\"000\", \"\")\r\n              )[0].statename,\r\n          mousePos: mouse(chartParent)\r\n        };\r\n        handleMouseOver(tooltipData);\r\n      })\r\n      .on(\"mouseleave\", d => {\r\n        handleMouseOut();\r\n      })\r\n\r\n      .on(\"click\", d => {\r\n        handleClick(d.data.fipscode);\r\n      });\r\n  };\r\n  simulation.nodes(nodesData).on(\"tick\", tickCallback);\r\n};\r\n\r\nexport const drawSpendingMapLegend = (\r\n  legendContainer,\r\n  props,\r\n  legendWidth,\r\n  legendHeight\r\n) => {\r\n  const { spendingLegendData, spendingRadiusScale } = props;\r\n  //console.log(spendingLegendData)\r\n  const legendUpdate = select(legendContainer)\r\n    .selectAll(\"g\")\r\n    .data(spendingLegendData, d => d);\r\n  const legendEnter = legendUpdate.enter().append(\"g\");\r\n  legendUpdate.exit().remove();\r\n  const legendMerge = legendEnter.merge(legendUpdate);\r\n\r\n  legendMerge\r\n    .append(\"circle\")\r\n    .attr(\"cx\", legendWidth / 2)\r\n    .attr(\"cy\", legendHeight - 10)\r\n    .transition()\r\n    .attr(\"r\", d => spendingRadiusScale(d))\r\n    .attr(\"cx\", legendWidth / 2)\r\n    .attr(\"cy\", d => legendHeight - 10 - spendingRadiusScale(d))\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", \"#000\");\r\n\r\n  legendMerge\r\n    .append(\"line\")\r\n    .attr(\"x1\", (d, i) =>\r\n      i % 2 === 0\r\n        ? legendWidth / 2 + spendingRadiusScale(d)\r\n        : legendWidth / 2 - spendingRadiusScale(d)\r\n    )\r\n    .attr(\"x2\", (d, i) =>\r\n      i % 2 === 0\r\n        ? legendWidth / 2 + spendingRadiusScale(max(spendingLegendData)) + 10\r\n        : legendWidth / 2 - spendingRadiusScale(max(spendingLegendData)) - 10\r\n    )\r\n    .attr(\"y1\", d => legendHeight - 10 - spendingRadiusScale(d))\r\n    .attr(\"y2\", d => legendHeight - 10 - spendingRadiusScale(d))\r\n    .style(\"stroke\", \"#000\")\r\n    .style(\"stroke-dasharray\", \"2,2\");\r\n\r\n  legendMerge\r\n    .append(\"text\")\r\n    .attr(\"x\", (d, i) =>\r\n      i % 2 === 0\r\n        ? legendWidth / 2 + spendingRadiusScale(max(spendingLegendData)) + 40\r\n        : legendWidth / 2 - spendingRadiusScale(max(spendingLegendData)) - 10\r\n    )\r\n    .attr(\"y\", d => legendHeight - 10 - spendingRadiusScale(d) + 2)\r\n    .attr(\"shape-rendering\", \"crispEdges\")\r\n    .style(\"text-anchor\", \"end\")\r\n    .style(\"font-size\", \"10px\")\r\n    .text((d, i) =>\r\n      i === 1 ? `${format(\"$.2s\")(d)} (Median)` : format(\"$.2s\")(d)\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  drawSpendingBubbles,\r\n  drawSpendingMapLegend,\r\n  drawOutline\r\n} from \"./d3SpendingMap\";\r\n\r\nclass SpendingMap extends Component {\r\n  mapWidth = 500;\r\n  mapHeight = 380;\r\n  legendWidth = 200;\r\n  legendHeight = 150;\r\n  mapAreaRef = node => (this.mapArea = node);\r\n  voronoiRef = node => (this.voronoiArea = node);\r\n  legendRef = node => (this.legendArea = node);\r\n  outlineRef = node => (this.outline = node);\r\n\r\n  shouldComponentUpdate(np, ns) {\r\n    if (np.fipscode === this.props.fipscode) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  componentDidMount() {\r\n    drawOutline(this.outline, this.props, this.mapWidth, this.mapHeight);\r\n    drawSpendingBubbles(\r\n      this.mapArea,\r\n      this.voronoiArea,\r\n      this.props,\r\n      this.mapWidth,\r\n      this.mapHeight\r\n    );\r\n    drawSpendingMapLegend(\r\n      this.legendArea,\r\n      this.props,\r\n      this.legendWidth,\r\n      this.legendHeight\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(pp, ps) {\r\n    drawOutline(this.outline, this.props, this.mapWidth, this.mapHeight);\r\n    drawSpendingBubbles(\r\n      this.mapArea,\r\n      this.voronoiArea,\r\n      this.props,\r\n      this.mapWidth,\r\n      this.mapHeight\r\n    );\r\n    drawSpendingMapLegend(\r\n      this.legendArea,\r\n      this.props,\r\n      this.legendWidth,\r\n      this.legendHeight\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { svgWidth, svgHeight } = this.props;\r\n    return (\r\n      <div className=\"chart-container\">\r\n        <svg\r\n          width={svgWidth}\r\n          height={svgHeight}\r\n          viewBox={`0 0 ${svgWidth} ${svgHeight}`}\r\n          preserveAspectRatio={\"xMidYMid meet\"}\r\n        >\r\n          <g ref={this.outlineRef} />\r\n          <g ref={this.mapAreaRef} transform=\"translate(25,0)\" />\r\n          <g ref={this.voronoiRef} transform=\"translate(25,0)\" />\r\n          <g\r\n            transform={`translate(${(svgWidth - this.legendWidth) /\r\n              2},${svgHeight - this.legendHeight})`}\r\n            ref={this.legendRef}\r\n          >\r\n            <rect\r\n              width={this.legendWidth}\r\n              height={this.legendHeight}\r\n              fill=\"none\"\r\n            />\r\n            <text x={this.legendWidth / 2} y={25}>\r\n              Regional Spending\r\n            </text>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SpendingMap;\r\n","import { select, format, mouse } from \"d3\";\r\nimport { textwrap } from \"d3-textwrap\";\r\nimport { NAICSColorLookup, getPetalPath } from \"./helpers\";\r\n\r\nexport const drawTop5 = (props, top5Area, areaWidth, areaHeight) => {\r\n  const { flowerData, metricKey } = props;\r\n  const textBounds = textwrap()\r\n    .bounds({ height: areaHeight - 20, width: areaWidth })\r\n    .method(\"tspans\");\r\n  const top5 = flowerData.map(obj => ({\r\n    title: obj.naics_title,\r\n    naics: +obj.naics\r\n  }));\r\n  //console.log(top5)\r\n  const groupsUpdate = select(top5Area)\r\n    .selectAll(\"g\")\r\n    .data(top5, d => d.naics);\r\n  const groupsEnter = groupsUpdate.enter().append(\"g\");\r\n  groupsEnter.merge(groupsUpdate).attr(\"transform\", (d, i) => {\r\n    return `translate(0,${45 + i * 25})`;\r\n  });\r\n  groupsUpdate.exit().remove();\r\n  groupsEnter\r\n    .append(\"text\")\r\n    .merge(groupsUpdate.select(\"text\"))\r\n    .text(d => d.title)\r\n    .style(\"font-size\", \"12px\")\r\n    .call(textBounds)\r\n    .attr(\"x\", 20)\r\n    .attr(\"y\", function(d) {\r\n      return this.childNodes.length === 1 ? -5 : -10;\r\n    });\r\n\r\n  groupsEnter\r\n    .append(\"path\")\r\n    .merge(groupsUpdate.select(\"path\"))\r\n    .attr(\"transform\", \"translate(10,0)rotate(180)\")\r\n    .attr(\"d\", getPetalPath(20, metricKey))\r\n    .attr(\"fill\", d => NAICSColorLookup[d.naics]);\r\n};\r\n\r\nexport const drawFlower = (\r\n  props,\r\n  flowerContainer,\r\n  flowerWidth,\r\n  flowerHeight\r\n) => {\r\n  const {\r\n    flowerData,\r\n    metricKey,\r\n    petalSizeScale,\r\n    handleFlowerMouseOver,\r\n    handleFlowerMouseOut\r\n  } = props;\r\n  //console.log(flowerData)\r\n  const angleUnit = 360 / flowerData.length;\r\n  const groupsUpdate = select(flowerContainer)\r\n    .selectAll(\"g\")\r\n    .data(flowerData, d => d.naics);\r\n  const groupsEnter = groupsUpdate.enter().append(\"g\");\r\n  groupsUpdate.exit().remove();\r\n\r\n  const rectsMerge = groupsEnter\r\n    .append(\"rect\")\r\n    .merge(groupsUpdate.select(\"rect\"))\r\n    .attr(\"pointer-events\", \"all\")\r\n    .attr(\"width\", 80)\r\n    .attr(\"height\", 100)\r\n    .attr(\"fill\", \"none\")\r\n    //.attr(\"stroke\", \"#000\")\r\n    .attr(\"transform\", function(d, i) {\r\n      const cx = flowerWidth / 2;\r\n      const cy = flowerHeight / 2;\r\n      return (\r\n        \"translate(\" + [cx, cy] + \") rotate(\" + [i * angleUnit - 180 + 45] + \")\"\r\n      );\r\n    });\r\n\r\n  rectsMerge.on(\"mouseover\", function(d) {\r\n    //console.log(d)\r\n    select(this.parentNode)\r\n      .select(\"path\")\r\n      .attr(\"stroke\", \"#000\");\r\n    const chartParent = this.parentNode.parentNode.parentNode.parentNode\r\n      .parentNode;\r\n    const flowerTooltipData = {\r\n      metricKey,\r\n      industry: d.naics_title,\r\n      naics: d.naics,\r\n      metric: d[metricKey],\r\n      mousePos: mouse(chartParent)\r\n    };\r\n    handleFlowerMouseOver(flowerTooltipData);\r\n  });\r\n\r\n  rectsMerge.on(\"mouseout\", function(d) {\r\n    //select(this).attr(\"stroke\", \"none\")\r\n    select(this.parentNode)\r\n      .select(\"path\")\r\n      .attr(\"stroke\", \"none\");\r\n    handleFlowerMouseOut();\r\n  });\r\n\r\n  const petalsMerge = groupsEnter\r\n    .append(\"path\")\r\n    .merge(groupsUpdate.select(\"path\"))\r\n    .attr(\"fill\", d => NAICSColorLookup[d.naics])\r\n    .attr(\"pointer-events\", \"none\")\r\n    .attr(\"d\", d => getPetalPath(petalSizeScale(d[metricKey]), metricKey))\r\n    .attr(\"transform\", function(d) {\r\n      const cx = flowerWidth / 2;\r\n      const cy = flowerHeight / 2;\r\n      return \"translate(\" + [cx, cy] + \") rotate(180)\";\r\n    });\r\n\r\n  petalsMerge\r\n    .transition()\r\n    .duration(700)\r\n    .attr(\"transform\", function(d, i) {\r\n      const cx = flowerWidth / 2;\r\n      const cy = flowerHeight / 2;\r\n      return \"translate(\" + [cx, cy] + \")rotate(\" + [i * angleUnit - 180] + \")\";\r\n    });\r\n};\r\n\r\nexport const drawFlowerLegend = (\r\n  props,\r\n  legendContainer,\r\n  legendWidth,\r\n  legendHeight\r\n) => {\r\n  const { metricKey, flowerLegendData, petalSizeScale } = props;\r\n  const groupsUpdate = select(legendContainer)\r\n    .selectAll(\"g\")\r\n    .data(flowerLegendData);\r\n  const groupsEnter = groupsUpdate.enter().append(\"g\");\r\n  groupsEnter.merge(groupsUpdate).attr(\"transform\", (d, i) => {\r\n    if (flowerLegendData.length === 1) {\r\n      return \"translate(80,0)\";\r\n    } else if (flowerLegendData.length === 2) {\r\n      return \"translate(40,0)\";\r\n    } else {\r\n      return `translate(${i * 80},0)`;\r\n    }\r\n  });\r\n  groupsUpdate.exit().remove();\r\n\r\n  groupsEnter\r\n    .append(\"text\")\r\n    .merge(groupsUpdate.select(\"text\"))\r\n    .attr(\"x\", 40)\r\n    .attr(\"y\", 140)\r\n    .text((d, i) =>\r\n      i === 1\r\n        ? `${\r\n            metricKey === \"total_pmt_amt\" ? format(\"$.2s\")(d) : format(\".2f\")(d)\r\n          } (Median)`\r\n        : metricKey === \"total_pmt_amt\"\r\n        ? format(\"$.2s\")(d)\r\n        : format(\".2f\")(d)\r\n    )\r\n    .style(\"text-anchor\", \"middle\")\r\n    .style(\"font-size\", \"10px\");\r\n\r\n  groupsEnter\r\n    .append(\"path\")\r\n    .attr(\"transform\", \"translate(40,120)rotate(180)\")\r\n    .merge(groupsUpdate.select(\"path\"))\r\n    .transition()\r\n    .attr(\"d\", d => getPetalPath(petalSizeScale(d), metricKey))\r\n    .attr(\"transform\", \"translate(40,120)rotate(180)\")\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"#000\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { drawFlower, drawFlowerLegend, drawTop5 } from \"./d3IndustryFlower\";\r\n\r\nclass IndustryFlower extends Component {\r\n  flowerWidth = 200;\r\n  flowerHeight = 200;\r\n  legendWidth = 240;\r\n  legendHeight = 150;\r\n  top5AreaWidth = 250;\r\n  top5AreaHeight = 150;\r\n  flowerAreaRef = node => (this.flowerArea = node);\r\n  legendAreaRef = node => (this.legendArea = node);\r\n  top5AreaRef = node => (this.top5Area = node);\r\n  shouldComponentUpdate(np, ns) {\r\n    if (np.clickedFips === this.props.clickedFips) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  componentDidMount() {\r\n    drawFlowerLegend(\r\n      this.props,\r\n      this.legendArea,\r\n      this.legendWidth,\r\n      this.legendHeight\r\n    );\r\n    drawFlower(\r\n      this.props,\r\n      this.flowerArea,\r\n      this.flowerWidth,\r\n      this.flowerHeight\r\n    );\r\n    drawTop5(\r\n      this.props,\r\n      this.top5Area,\r\n      this.top5AreaWidth,\r\n      this.top5AreaHeight\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(pp, ps) {\r\n    drawFlowerLegend(\r\n      this.props,\r\n      this.legendArea,\r\n      this.legendWidth,\r\n      this.legendHeight\r\n    );\r\n    drawFlower(\r\n      this.props,\r\n      this.flowerArea,\r\n      this.flowerWidth,\r\n      this.flowerHeight\r\n    );\r\n    drawTop5(\r\n      this.props,\r\n      this.top5Area,\r\n      this.top5AreaWidth,\r\n      this.top5AreaHeight\r\n    );\r\n  }\r\n  render() {\r\n    const {\r\n      svgWidth,\r\n      svgHeight,\r\n      clickedFips,\r\n      metricKey,\r\n      flowerData\r\n    } = this.props;\r\n    if (flowerData[0]) {\r\n      return (\r\n        <div className=\"chart-container\">\r\n          <svg\r\n            width={svgWidth}\r\n            height={svgHeight}\r\n            viewBox={`0 0 ${svgWidth} ${svgHeight}`}\r\n            preserveAspectRatio={\"xMidYMid meet\"}\r\n          >\r\n            <g\r\n              ref={this.top5AreaRef}\r\n              transform={`translate(${(svgWidth - this.top5AreaWidth) / 2},0)`}\r\n            />\r\n            <g\r\n              ref={this.flowerAreaRef}\r\n              className=\"flower\"\r\n              transform={`translate(${(svgWidth - this.flowerWidth) / 2},${this\r\n                .top5AreaHeight + 10})`}\r\n            />\r\n\r\n            <g\r\n              transform={`translate(${(svgWidth - this.legendWidth) / 2},350)`}\r\n              ref={this.legendAreaRef}\r\n            >\r\n              <text\r\n                x={this.legendWidth / 2}\r\n                y={10}\r\n                style={{ textAnchor: \"middle\" }}\r\n              >\r\n                {metricKey === \"total_pmt_amt\"\r\n                  ? \"Industry Spending\"\r\n                  : \"Employee LQ\"}\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Data Not Avaialbe For This County</p>;\r\n    }\r\n  }\r\n}\r\nexport default IndustryFlower;\r\n","import { NAICSColorLookup } from \"./helpers\";\r\nimport {\r\n  select,\r\n  extent,\r\n  max,\r\n  quantile,\r\n  scaleLog,\r\n  scaleSqrt,\r\n  forceSimulation,\r\n  forceX,\r\n  forceY,\r\n  forceCollide,\r\n  axisBottom,\r\n  voronoi,\r\n  format,\r\n  mouse\r\n} from \"d3\";\r\n\r\nexport const drawBsLegend = (\r\n  bsLegendData,\r\n  legendContainer,\r\n  legendWidth,\r\n  legendHeight\r\n) => {\r\n  select(legendContainer)\r\n    .selectAll(\"g\")\r\n    .remove();\r\n  //console.log(bsLegendData)\r\n  const radiusScale = scaleSqrt()\r\n    .domain([0, max(bsLegendData)])\r\n    .range([0, 20]);\r\n  const legendUpdate = select(legendContainer)\r\n    .selectAll(\"g\")\r\n    .data(bsLegendData, d => d);\r\n  const legendEnter = legendUpdate.enter().append(\"g\");\r\n  legendUpdate.exit().remove();\r\n  const legendMerge = legendEnter.merge(legendUpdate);\r\n\r\n  legendMerge\r\n    .append(\"circle\")\r\n    .attr(\"r\", d => radiusScale(d))\r\n    .attr(\"cx\", legendWidth / 2)\r\n    .attr(\"cy\", d => legendHeight - 10 - radiusScale(d))\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", \"#000\");\r\n\r\n  legendMerge\r\n    .append(\"line\")\r\n    .attr(\"x1\", (d, i) =>\r\n      i % 2 === 0\r\n        ? legendWidth / 2 + radiusScale(d)\r\n        : legendWidth / 2 - radiusScale(d)\r\n    )\r\n    .attr(\"x2\", (d, i) =>\r\n      i % 2 === 0\r\n        ? legendWidth / 2 + radiusScale(max(bsLegendData)) + 10\r\n        : legendWidth / 2 - radiusScale(max(bsLegendData)) - 10\r\n    )\r\n    .attr(\"y1\", d => legendHeight - 10 - radiusScale(d))\r\n    .attr(\"y2\", d => legendHeight - 10 - radiusScale(d))\r\n    .style(\"stroke\", \"#000\")\r\n    .style(\"stroke-dasharray\", \"2,2\");\r\n\r\n  legendMerge\r\n    .append(\"text\")\r\n    .attr(\"x\", (d, i) =>\r\n      i % 2 === 0\r\n        ? legendWidth / 2 + radiusScale(max(bsLegendData)) + 40\r\n        : legendWidth / 2 - radiusScale(max(bsLegendData)) - 10\r\n    )\r\n    .attr(\"y\", d => legendHeight - 10 - radiusScale(d) + 2)\r\n    .attr(\"shape-rendering\", \"crispEdges\")\r\n    .style(\"text-anchor\", \"end\")\r\n    .style(\"font-size\", \"10px\")\r\n    .text((d, i) =>\r\n      i === 1 ? `${format(\"$.2s\")(d)} (Median)` : format(\"$.2s\")(d)\r\n    );\r\n};\r\n\r\nexport const drawBeeswarm = (\r\n  props,\r\n  bsContainer,\r\n  xAxisContainer,\r\n  width,\r\n  height\r\n) => {\r\n  let {\r\n    beeswarmData,\r\n    lqType,\r\n    handleBeeswarmMouseOver,\r\n    handleBeeswarmMouseOut\r\n  } = props;\r\n  beeswarmData.forEach(obj => {\r\n    obj[lqType] = +obj[lqType];\r\n    obj.total_pmt_amt = +obj.total_pmt_amt;\r\n    obj.naics = +obj.naics;\r\n  });\r\n  beeswarmData = beeswarmData.sort((a, b) => (a[lqType] < b[lqType] ? -1 : 1));\r\n  const radiusScale = scaleSqrt()\r\n    .domain([0, max(beeswarmData, d => d.total_pmt_amt)])\r\n    .range([0, 20]);\r\n  //console.log(beeswarmData)\r\n\r\n  //x scale update\r\n  let inputRange = extent(beeswarmData, d => d[lqType]);\r\n  let tickValues;\r\n  if (beeswarmData.length === 1) {\r\n    tickValues = [inputRange[0]];\r\n    inputRange = [inputRange[0] - 0.001, inputRange[0] + 0.001];\r\n  } else if (beeswarmData.length < 4) {\r\n    tickValues = inputRange;\r\n  } else {\r\n    tickValues = [0, 0.5, 1].map(i =>\r\n      //quantile(beeswarmData.map(d => d.total_pmt_amt), i)\r\n      quantile(beeswarmData.map(d => d[lqType]), i)\r\n    );\r\n  }\r\n  //console.log(inputRange)\r\n  const xScale = scaleLog()\r\n    .domain(inputRange)\r\n    .rangeRound([0, width]);\r\n\r\n  const xAxis = axisBottom(xScale)\r\n    .tickValues(tickValues)\r\n    .tickFormat(format(\".2f\"));\r\n  //.tickFormat(format(\"$.2s\"));\r\n\r\n  select(xAxisContainer)\r\n    .transition()\r\n    .call(xAxis);\r\n\r\n  //process bubble data\r\n  if (beeswarmData.length < 5) {\r\n    beeswarmData = beeswarmData.map(d => ({\r\n      ...d,\r\n      x: xScale(d[lqType]),\r\n      //x: xScale(d.total_pmt_amt),\r\n      y: height / 2\r\n    }));\r\n  } else if (beeswarmData.length < 9) {\r\n    const simulation = forceSimulation(beeswarmData)\r\n      .force(\"y\", forceY(height * 0.5).strength(0.1))\r\n      .force(\"collide\", forceCollide(20))\r\n      .stop();\r\n\r\n    beeswarmData.forEach(() => {\r\n      simulation.tick();\r\n    });\r\n    beeswarmData = beeswarmData.map(d => ({\r\n      ...d,\r\n      x: xScale(d[lqType])\r\n      //x: xScale(d.total_pmt_amt)\r\n    }));\r\n  } else {\r\n    const simulation = forceSimulation(beeswarmData)\r\n      .force(\"x\", forceX(d => xScale(d[lqType])).strength(0.8))\r\n      .force(\"y\", forceY(height * 0.5).strength(0.1))\r\n      .force(\"collide\", forceCollide(20))\r\n      .stop();\r\n\r\n    beeswarmData.forEach(() => {\r\n      simulation.tick();\r\n    });\r\n  }\r\n\r\n  //console.log(beeswarmData)\r\n\r\n  // set up voronoi overlay to improve hover experience\r\n  // if the force layout x is bigger than svg container width will return empty data and cause error\r\n\r\n  const beeswarmDataWithVoronoi = voronoi()\r\n    .extent([[-50, 0], [width + 50, height]])\r\n    .x(d => d.x)\r\n    .y(d => d.y)\r\n    .polygons(beeswarmData);\r\n\r\n  //console.log(beeswarmDataWithVoronoi)\r\n\r\n  //draw bubbles\r\n  const cellsUpdate = select(bsContainer)\r\n    .selectAll(\"g\")\r\n    .data(beeswarmDataWithVoronoi, d => d.data.naics);\r\n\r\n  const cellsEnter = cellsUpdate.enter().append(\"g\");\r\n\r\n  cellsUpdate.exit().remove();\r\n\r\n  cellsEnter\r\n    .append(\"path\")\r\n    .merge(cellsUpdate.select(\"path\"))\r\n    .attr(\"d\", d => \"M\" + d.join(\"L\") + \"Z\")\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"pointer-events\", \"all\")\r\n    .on(\"mouseover\", function(d) {\r\n      //console.log(d.data)\r\n      const chartParent = this.parentNode.parentNode.parentNode.parentNode\r\n        .parentNode.parentNode;\r\n      const bsTooltipData = {\r\n        naics: d.data.naics,\r\n        industry: d.data.naics_title,\r\n        lqType,\r\n        lqVal: d.data[lqType],\r\n        spending: d.data.total_pmt_amt,\r\n        mousePos: mouse(chartParent)\r\n      };\r\n      handleBeeswarmMouseOver(bsTooltipData);\r\n    })\r\n    .on(\"mouseout\", () => {\r\n      handleBeeswarmMouseOut();\r\n    });\r\n  //.style(\"stroke\", \"green\");\r\n\r\n  cellsEnter\r\n    .append(\"circle\")\r\n    .attr(\"cx\", d => d.data.x)\r\n    .attr(\"cy\", d => d.data.y)\r\n    .merge(cellsUpdate.select(\"circle\"))\r\n    .on(\"mouseover\", function(d) {\r\n      //console.log(d.data)\r\n      const chartContainer = this.parentNode.parentNode.parentNode.parentNode\r\n        .parentNode.parentNode;\r\n      const bsTooltipData = {\r\n        naics: d.data.naics,\r\n        industry: d.data.naics_title,\r\n        lqType,\r\n        lqVal: d.data[lqType],\r\n        spending: d.data.total_pmt_amt,\r\n        mousePos: mouse(chartContainer)\r\n      };\r\n      handleBeeswarmMouseOver(bsTooltipData);\r\n    })\r\n    .on(\"mouseout\", () => {\r\n      handleBeeswarmMouseOut();\r\n    })\r\n    .transition()\r\n    .duration(1000)\r\n    .attr(\"r\", d => radiusScale(d.data.total_pmt_amt))\r\n    //.attr(\"r\", d => radiusScale(d.data[lqType]))\r\n    .attr(\"fill\", d => NAICSColorLookup[d.data.naics])\r\n    .attr(\"cx\", d => d.data.x)\r\n    .attr(\"cy\", d => d.data.y);\r\n\r\n  cellsEnter\r\n    .append(\"text\")\r\n    .attr(\"x\", d => d.data.x)\r\n    .attr(\"y\", d => d.data.y - radiusScale(d.data.total_pmt_amt) - 2)\r\n    .style(\"text-anchor\", \"middle\")\r\n    .style(\"font-size\", \"10px\")\r\n    .merge(cellsUpdate.select(\"text\"))\r\n    .transition()\r\n    .duration(1000)\r\n    .text(d => d.data.naics)\r\n    .attr(\"x\", d => d.data.x)\r\n    .attr(\"y\", d => d.data.y - radiusScale(d.data.total_pmt_amt) - 2)\r\n    .style(\"text-anchor\", \"middle\")\r\n    .style(\"font-size\", \"10px\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { drawBeeswarm, drawBsLegend } from \"./d3Beeswarm\";\r\n\r\nclass Beeswarm extends Component {\r\n  xAxisRef = node => (this.xAxis = node);\r\n  legendAreaRef = node => (this.legendArea = node);\r\n  beeswarmRef = node => (this.beeswarmArea = node);\r\n  width = 900;\r\n  height = 200;\r\n  legendWidth = 200;\r\n  legendHeight = 80;\r\n  shouldComponentUpdate(np, ns) {\r\n    if (np.clickedFips === this.props.clickedFips) {\r\n      if (np.lqType !== this.props.lqType) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  componentDidMount() {\r\n    drawBsLegend(\r\n      this.props.bsLegendData,\r\n      this.legendArea,\r\n      this.legendWidth,\r\n      this.legendHeight\r\n    );\r\n    drawBeeswarm(\r\n      this.props,\r\n      this.beeswarmArea,\r\n      this.xAxis,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(pp, ps) {\r\n    drawBsLegend(\r\n      this.props.bsLegendData,\r\n      this.legendArea,\r\n      this.legendWidth,\r\n      this.legendHeight\r\n    );\r\n    drawBeeswarm(\r\n      this.props,\r\n      this.beeswarmArea,\r\n      this.xAxis,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.beeswarmData[0]) {\r\n      return (\r\n        <div className=\"chart-container\">\r\n          <svg width={1000} height={320}>\r\n            <g transform=\"translate(50,0)\">\r\n              <g\r\n                className=\"axis axis--x\"\r\n                ref={this.xAxisRef}\r\n                transform=\"translate(0,220)\"\r\n              />\r\n              <g\r\n                className=\"bubbles\"\r\n                ref={this.beeswarmRef}\r\n                transform=\"translate(0,20)\"\r\n              />\r\n            </g>\r\n            <g transform=\"translate(400,240)\" ref={this.legendAreaRef}>\r\n              <text x={100} y={25} style={{ textAnchor: \"middle\" }}>\r\n                Industry Spending\r\n              </text>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Data Not Avaialbe For This County</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Beeswarm;\r\n","import React from \"react\";\r\nimport { format } from \"d3\";\r\n\r\nconst IndustryFlowerTooltip = props => {\r\n  const { metric, mousePos, metricKey, id } = props;\r\n\r\n  return (\r\n    metricKey === id && (\r\n      <div\r\n        style={{ top: `${mousePos[1]}px`, left: `${mousePos[0]}px` }}\r\n        className=\"map-tooltip\"\r\n      >\r\n        <strong>{`${\r\n          metricKey === \"total_pmt_amt\"\r\n            ? format(\"$.2s\")(metric)\r\n            : format(\".2f\")(metric)\r\n        }`}</strong>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default IndustryFlowerTooltip;\r\n","import React from \"react\";\r\nimport { format } from \"d3\";\r\n\r\nconst SpendingMapTooltip = props => {\r\n  const { location, spending, mousePos } = props;\r\n  return (\r\n    <div\r\n      style={{ top: `${mousePos[1]}px`, left: `${mousePos[0]}px` }}\r\n      className=\"map-tooltip\"\r\n    >\r\n      <strong>{`${location}:${format(\"$.2s\")(spending)}`}</strong>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpendingMapTooltip;\r\n","import React from \"react\";\r\nimport { format } from \"d3\";\r\nimport { lqOptions } from \"./helpers\";\r\n\r\nconst BeeswarmTooltip = props => {\r\n  const { industry, naics, lqType, lqVal, spending, mousePos } = props;\r\n  const lqLabel = lqOptions.filter(opt => opt.value === lqType)[0].label;\r\n  return (\r\n    <div\r\n      style={{ top: `${mousePos[1]}px`, left: `${mousePos[0]}px` }}\r\n      className=\"map-tooltip\"\r\n    >\r\n      <strong>{`${industry}`}</strong>\r\n      <p>\r\n        {`NAICS ${naics}`}\r\n        <br />\r\n        {`${lqLabel}: ${format(\".2f\")(lqVal)}`}\r\n        <br />\r\n        {`Industry Spending: ${format(\"$.2s\")(spending)}`}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeeswarmTooltip;\r\n","import React, { Component } from \"react\";\nimport { RewindButton } from \"./RewindButton\";\nimport { LQSelector } from \"./LQSelector\";\nimport { Row, Col, OverlayTrigger, Glyphicon, Tooltip } from \"react-bootstrap\";\nimport { format } from \"d3\";\nimport {\n  filterSpendingData,\n  filterBeeswarmData,\n  getNodesData,\n  getLocation,\n  getFlowerData,\n  getBsLegendData,\n  getNumberOne,\n  getSpendingRadiuScale,\n  getSpendingLegendData,\n  getFLowerLegendData,\n  getPetalSizeScale\n} from \"./helpers\";\nimport \"./App.css\";\nimport SpendingMap from \"./SpendingMap\";\nimport IndustryFlower from \"./IndustryFlower\";\nimport Beeswarm from \"./Beeswarm\";\nimport IndustryFlowerTooltip from \"./IndustryFlowerTooltip\";\nimport SpendingMapTooltip from \"./SpendingMapTooltip\";\nimport BeeswarmTooltip from \"./BeeswarmTooltip\";\nimport StateCenters from \"./data/StateCenters.json\";\nimport CountyCenters from \"./data/CountyCenters.json\";\nimport USStateList from \"./data/stateslist.json\";\nimport beeswarmRawData from \"./data/beeswarm.json\";\nimport mapRawData from \"./data/map.json\";\nimport spendingflowerRawData from \"./data/spending_flower.json\";\nimport lqflowerRawData from \"./data/lq_flower.json\";\n\nclass App extends Component {\n  state = {\n    clickedFips: null,\n    nodeHovered: false,\n    petalHovered: false,\n    bsHovered: false,\n    mapTooltipData: null,\n    flowerTooltipData: null,\n    bsTooltipData: null,\n    lqType: \"lq_wgt_annual_avg_emplvl\"\n  };\n\n  spendingTextRef = node => (this.spendingTextArea = node);\n  spendingFlowerTextRef = node => (this.spendingFlowerTextArea = node);\n  lqFlowerRef = node => (this.lqFlowerArea = node);\n  beeswarmRef = node => (this.beeswarmArea = node);\n\n  handleLQChange = option => {\n    this.setState({ lqType: option.value });\n  };\n\n  handleNationButtonClick = () => {\n    this.setState({ clickedFips: null });\n  };\n\n  handleStateButtonClick = clickedFips => () => {\n    this.setState({ clickedFips: `${clickedFips.toString().slice(0, 2)}000` });\n  };\n\n  handleClick = clickedFips => {\n    this.setState({\n      clickedFips,\n      nodeHovered: false,\n      mapTooltipData: null\n    });\n  };\n\n  handleMouseOver = mapTooltipData => {\n    this.setState({ mapTooltipData, nodeHovered: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ mapTooltipData: null, nodeHovered: false });\n  };\n\n  handleFlowerMouseOver = flowerTooltipData => {\n    this.setState({ flowerTooltipData, petalHovered: true });\n  };\n\n  handleFlowerMouseOut = () => {\n    this.setState({ flowerTooltipData: null, petalHovered: false });\n  };\n\n  handleBSMouseOver = bsTooltipData => {\n    this.setState({ bsTooltipData, bsHovered: true });\n  };\n\n  handleBSMouseOut = () => {\n    this.setState({ bsTooltipData: null, bsHovered: false });\n  };\n\n  renderBeeswarm = (beeswarmRawData, clickedFips, lqType) => {\n    if (beeswarmRawData) {\n      const beeswarmData = filterBeeswarmData(beeswarmRawData, clickedFips);\n      const bsLegendData = getBsLegendData(beeswarmData);\n      const props = {\n        lqType,\n        beeswarmData,\n        clickedFips,\n        bsLegendData,\n        handleBeeswarmMouseOver: this.handleBSMouseOver,\n        handleBeeswarmMouseOut: this.handleBSMouseOut\n      };\n      return <Beeswarm {...props} />;\n    } else {\n      return <div>Loading...</div>;\n    }\n  };\n\n  renderSpendingText = (mapRawData, USStateList, clickedFips) => {\n    if (mapRawData) {\n      let fipscode;\n      if (clickedFips && !/000$/.test(clickedFips)) {\n        fipscode = `${clickedFips.toString().slice(0, 2)}000`;\n      } else {\n        fipscode = clickedFips;\n      }\n\n      const spendingData = filterSpendingData(mapRawData, fipscode);\n      const numberOne = getNumberOne(spendingData, USStateList, fipscode);\n      return (\n        <div className=\"text-content\">\n          This spending map below is based on{\" \"}\n          <span className=\"dynamic-text\">2017</span> total direct research\n          expenditures across{\" \"}\n          <span>\n            {clickedFips\n              ? getLocation(mapRawData, clickedFips, USStateList, \"map\")\n              : \"the U.S.\"}\n          </span>\n          , with the size of the <span>{clickedFips ? \"county\" : \"state\"}</span>{\" \"}\n          bubble proportional to the amount of spending in that{\" \"}\n          <span>{clickedFips ? \"county\" : \"state\"}</span>.{\" \"}\n          <span className=\"dynamic-text\">The University of Michigan</span> spent\n          the most in{\" \"}\n          <span className=\"dynamic-text\">{numberOne.locationName}</span>,\n          accounting for{\" \"}\n          <span className=\"dynamic-text\">\n            {numberOne.percentage ? (\n              format(\".1%\")(numberOne.percentage)\n            ) : (\n              <i className=\"fa fa-spinner\" />\n            )}\n          </span>{\" \"}\n          of all its research expenditures. Hover over each bubble to to see the\n          amount of spending in that{\" \"}\n          <span>{clickedFips ? \"county\" : \"state\"}</span>. Click on the bubbles\n          to drill down into state and county spending.\n        </div>\n      );\n    } else {\n      return <div>Loading...</div>;\n    }\n  };\n\n  renderSpendingMap = (mapRawData, clickedFips) => {\n    if (mapRawData) {\n      let fipscode;\n      if (clickedFips && !/000$/.test(clickedFips)) {\n        fipscode = `${clickedFips.toString().slice(0, 2)}000`;\n      } else {\n        fipscode = clickedFips;\n      }\n      const centerCoords = fipscode ? CountyCenters[fipscode] : StateCenters;\n      const svgWidth = 550;\n      const svgHeight = 500;\n      const spendingData = filterSpendingData(mapRawData, fipscode);\n      const spendingRadiusScale = getSpendingRadiuScale(spendingData);\n      const spendingLegendData = getSpendingLegendData(spendingData);\n      const nodesData = getNodesData(spendingData, centerCoords, {\n        width: svgWidth,\n        height: svgHeight,\n        sizeScale: spendingRadiusScale\n      });\n      const props = {\n        spendingRadiusScale,\n        fipscode,\n        clickedFips,\n        svgWidth,\n        svgHeight,\n        nodesData,\n        spendingData,\n        spendingLegendData,\n        handleClick: this.handleClick,\n        USStateList: this.props.USStateList,\n        handleMouseOver: this.handleMouseOver,\n        handleMouseOut: this.handleMouseOut\n      };\n      return <SpendingMap {...props} />;\n    } else {\n      return <div>Loading...</div>;\n    }\n  };\n\n  renderIndustryFlower = (flowerRawData, clickedFips, metricKey) => {\n    if (flowerRawData) {\n      const svgWidth = clickedFips ? 250 : 500;\n      const svgHeight = 500;\n      const flowerData = getFlowerData(flowerRawData, clickedFips, metricKey);\n      const flowerLegendData = getFLowerLegendData(flowerData, metricKey);\n      const petalSizeScale = getPetalSizeScale(flowerData, metricKey);\n\n      const props = {\n        flowerData,\n        svgWidth,\n        svgHeight,\n        clickedFips,\n        metricKey,\n        flowerLegendData,\n        petalSizeScale,\n        handleFlowerMouseOver: this.handleFlowerMouseOver,\n        handleFlowerMouseOut: this.handleFlowerMouseOut\n      };\n      return <IndustryFlower {...props} />;\n    } else {\n      return <div>Loading...</div>;\n    }\n  };\n  render() {\n    const {\n      clickedFips,\n      nodeHovered,\n      petalHovered,\n      bsHovered,\n      flowerTooltipData,\n      mapTooltipData,\n      bsTooltipData,\n      lqType\n    } = this.state;\n    const textContainerHeight = clickedFips ? 250 : 150;\n    return (\n      <div className=\"App\">\n        <Row>\n          <Col xs={clickedFips ? 6 : 6} className=\"spending-map\">\n            <div\n              className=\"text-container\"\n              style={{ height: `${textContainerHeight}px` }}\n              ref={this.spendingTextRef}\n            >\n              <h4>\n                {getLocation(mapRawData, clickedFips, USStateList, \"map\")}{\" \"}\n                Vendor Spending Distribution\n              </h4>\n\n              {this.renderSpendingText(mapRawData, USStateList, clickedFips)}\n              {clickedFips && (\n                <RewindButton\n                  clickedFips={clickedFips}\n                  handleNationButtonClick={this.handleNationButtonClick}\n                  handleStateButtonClick={this.handleStateButtonClick}\n                />\n              )}\n            </div>\n            {this.renderSpendingMap(mapRawData, clickedFips)}\n            {nodeHovered && <SpendingMapTooltip {...mapTooltipData} />}\n          </Col>\n\n          <Col xs={clickedFips ? 3 : 6} className=\"industry-flower\">\n            <div\n              className=\"text-container\"\n              style={{ height: `${textContainerHeight}px` }}\n              ref={this.spendingFlowerTextRef}\n            >\n              {clickedFips ? (\n                <div>\n                  <h4>{getLocation(mapRawData, clickedFips, USStateList)}</h4>\n                  <h4>Top 5 Industries</h4>\n                  <p>ranked by Industry Spending</p>\n                </div>\n              ) : (\n                <h4>Top 5 Industries - National Spending</h4>\n              )}\n              <div className=\"text-content\">\n                <span className=\"dynamic-text\">The University of Michigan</span>{\" \"}\n                expended the greatest amount of research funds in the five\n                industries represented by the petals of a flower, displayed\n                below. The petal color corresponds to the industry, while the\n                petal size represents the amount of spending. Hover over each\n                petal to view more information about the industry and spending.\n              </div>\n            </div>\n            {this.renderIndustryFlower(\n              spendingflowerRawData,\n              clickedFips,\n              \"total_pmt_amt\"\n            )}\n            {petalHovered && (\n              <IndustryFlowerTooltip\n                {...flowerTooltipData}\n                id=\"total_pmt_amt\"\n              />\n            )}\n          </Col>\n          {clickedFips && (\n            <Col xs={3} className=\"industry-flower\">\n              <div\n                className=\"text-container\"\n                style={{ height: `${textContainerHeight}px` }}\n                ref={this.lqFlowerRef}\n              >\n                {\n                  <div>\n                    <h4>{getLocation(mapRawData, clickedFips, USStateList)}</h4>\n                    <h4>Top 5 Industries</h4>\n                    <p>ranked by Employee Location Quotient</p>\n                  </div>\n                }\n                <div className=\"text-content\">\n                  The top 5 Industries ranked by Employee Location Quotient\n                  <OverlayTrigger\n                    placement=\"bottom\"\n                    overlay={\n                      <Tooltip id=\"tooltip\">\n                        Local Quotients are calculated by first, dividing local\n                        industry employment by the all-industry, all-ownerships\n                        total of local employment. Second, national industry\n                        employment is divided by the all industry, all\n                        ownerships total for the nation. Finally, the local\n                        ratio is divided by the national ratio.\n                      </Tooltip>\n                    }\n                  >\n                    <Glyphicon glyph=\"question-sign\" />\n                  </OverlayTrigger>\n                  &nbsp;are listed below. Location Quotient is a measure of\n                  industry's importance to local regions. The higher the\n                  Location Quotient the more important an industry is to the\n                  economic well-being of a given state or county.\n                </div>\n              </div>\n\n              {this.renderIndustryFlower(\n                lqflowerRawData,\n                clickedFips,\n                \"lq_wgt_annual_avg_emplvl\"\n              )}\n              {petalHovered && (\n                <IndustryFlowerTooltip\n                  {...flowerTooltipData}\n                  id=\"lq_wgt_annual_avg_emplvl\"\n                />\n              )}\n            </Col>\n          )}\n        </Row>\n        {clickedFips && (\n          <Col xs={12} className=\"beeswarm\">\n            <div className=\"text-container\" ref={this.beeswarmRef}>\n              {\n                <div>\n                  <h4>\n                    {getLocation(\n                      spendingflowerRawData,\n                      clickedFips,\n                      USStateList\n                    )}\n                  </h4>\n                  <h4>Industry Spending vs. Location Quotient</h4>\n                </div>\n              }\n              <div className=\"text-content\">\n                This chart arranges industries in a given region by their\n                importance to that region with more important industries on the\n                right side of the chart. The size and proportion of each\n                industry bubble represents the total research spending dollars\n                that can be matched from vendors to sub-contractees to specific\n                industries.\n              </div>\n\n              <LQSelector handleNAICSChange={this.handleLQChange} />\n            </div>\n            {this.renderBeeswarm(beeswarmRawData, clickedFips, lqType)}\n            {bsHovered && <BeeswarmTooltip {...bsTooltipData} />}\n          </Col>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}